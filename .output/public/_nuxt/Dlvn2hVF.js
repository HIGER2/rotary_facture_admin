import{B as h,r as y,z as m,I as p,n as E}from"./iXaSmRFV.js";import{u as s}from"./D4RAmkR7.js";const O=h("payment",()=>{async function c(t){return await s(`/payment/all?${t.toString()}`)}async function f(t){return await s("/payment/create",{method:"POST",body:t})}async function i(t){return await s("/payment/processe",{method:"POST",body:t})}async function u(t){return await s("/payment/update",{method:"put",body:t})}async function P(t){return await s("/payment/verify/token",{method:"post",body:t})}async function l(t){return await s(`/payment/find/${t}`)}return{all:c,create:f,findWithPaiement:l,update:u,processePayment:i,checkPayment:P}}),W=h("PaymentViewModel",()=>{const c=O(),f=y([]);y({});const i=y([]),u=y(!1),l=m({...{facture_id:"",facture_uid:"",amount:"",status:"",mode_paiement:""}}),t=m({amount:""}),w=m({amount:null,mode_paiement:"",status:"",id:""});async function S(r){var e,o;const n=await c.all(r);i.value=(e=n==null?void 0:n.data)==null?void 0:e.analytic,f.value=[...(o=n.data)==null?void 0:o.data.map((a,d)=>{var v,_;return{reference:a==null?void 0:a.reference,club:((v=a==null?void 0:a.club)==null?void 0:v.name)||"N/A",fac:((_=a==null?void 0:a.facture)==null?void 0:_.reference)||"N/A",amount:a==null?void 0:a.amount,status:a==null?void 0:a.status,mode_paiement:a==null?void 0:a.mode_paiement,date:a==null?void 0:a.date}})]}async function C(r){var o;u.value=!0;let n={...l,facture_id:r.id,facture_uid:r.facture_uid};const e=await c.create(n);e!=null&&e.error&&alert((o=e==null?void 0:e.error)==null?void 0:o.message),e!=null&&e.data&&p("Opération éffectuée",{autoClose:1e3,type:p.TYPE.SUCCESS}),u.value=!1}async function b(r){var o,a,d;u.value=!0;let n={...t,facture_id:r.id,facture_uid:r.facture_uid};const e=await c.processePayment(n);e!=null&&e.error&&alert((o=e==null?void 0:e.error)==null?void 0:o.message),e!=null&&e.data&&E((d=(a=e==null?void 0:e.data)==null?void 0:a.data)==null?void 0:d.url,{external:!0}),u.value=!1}async function g(r){u.value=!0,await c.checkPayment(r),u.value=!1}async function T(){var e;u.value=!0;let r={...w};const n=await c.update(r);n!=null&&n.error&&alert((e=n==null?void 0:n.error)==null?void 0:e.message),n!=null&&n.data&&p("Opération éffectuée",{autoClose:1e3,type:p.TYPE.SUCCESS}),u.value=!1}async function k(r){await c.findWithPaiement(r)}return{all:S,create:C,findWithPaiement:k,newPayment:l,payments:f,isLoading:u,updatePayment:w,update:T,processePayment:b,paymentAmount:t,checkPayment:g,analityc:i}});export{W as u};
