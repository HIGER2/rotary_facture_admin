import{m as w,x as l,r as y,E as f}from"./BydxnfMO.js";import{u as i}from"./B45GUjMg.js";const F=w("facture",()=>{async function u(t){return await i(`/facture/all?${t.toString()}`)}async function r(t){return await i("/facture/create",{method:"POST",body:t})}async function s(t){return await i("/facture/update",{method:"PUT",body:t})}async function c(t){return await i(`/facture/find/${t}`)}async function o(t){return await i(`/facture/get/${t}`)}return{all:u,create:r,findWithPaiement:c,find:o,update:s}}),E=w("FactureViewModel",()=>{const u=F(),r=l([]),s=l({}),c=l(!1);let o={club_id:"",amount:"",date_echeance:"",objet:"",status:""};const t=y({...o}),d=y({...o,id:null});async function p(a){var n,m;const e=await u.all(a);r.value=[...(m=(n=e.data)==null?void 0:n.data)==null?void 0:m.data]}async function S(){c.value=!0;let a={...t};await u.create(a),f("Opération éffectuée",{autoClose:1e3,type:f.TYPE.SUCCESS}),c.value=!1}async function v(){c.value=!0;let a={...d};await u.update(a),f("Opération éffectuée",{autoClose:1e3,type:f.TYPE.SUCCESS}),c.value=!1}async function h(a){var n;const e=await u.findWithPaiement(a);s.value=(n=e==null?void 0:e.data)==null?void 0:n.data}async function C(a){var n;const e=await u.find(a);Object.assign(d,(n=e==null?void 0:e.data)==null?void 0:n.data)}return{all:p,factures:r,facture:s,create:S,findWithPaiement:h,newFacture:t,isLoading:c,find:C,updateFacture:d,update:v}});export{E as u};
