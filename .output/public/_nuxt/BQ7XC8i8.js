import{g as i,R as c,z as m,S as P,T as h,x as v,U as L,V as u,i as b,W as g,X as k,l as d,Y as l,L as R,Z as S,$ as x,a0 as T,C as j,a1 as _}from"./DvIDVNoU.js";const A=i({name:"LayoutLoader",inheritAttrs:!1,props:{name:String,layoutProps:Object},setup(t,a){return()=>l(u[t.name],t.layoutProps,a.slots)}}),O={name:{type:[String,Boolean,Object],default:null},fallback:{type:[String,Object],default:null}},H=i({name:"NuxtLayout",inheritAttrs:!1,props:O,setup(t,a){const e=c(),s=b(T),n=s===m()?P():s,r=h(()=>{let o=d(t.name)??n.meta.layout??"default";return o&&!(o in u)&&t.fallback&&(o=d(t.fallback)),o}),y=v();a.expose({layoutRef:y});const p=e.deferHydration();if(e.isHydrating){const o=e.hooks.hookOnce("app:error",p);L().beforeEach(o)}return()=>{const o=r.value&&r.value in u,f=n.meta.layoutTransition??g;return k(o&&f,{default:()=>l(x,{suspensible:!0,onResolve:()=>{S(p)}},{default:()=>l(B,{layoutProps:R(a.attrs,{ref:y}),key:r.value||void 0,name:r.value,shouldProvide:!t.name,hasTransition:!!f},a.slots)})}).default()}}}),B=i({name:"NuxtLayoutProvider",inheritAttrs:!1,props:{name:{type:[String,Boolean]},layoutProps:{type:Object},hasTransition:{type:Boolean},shouldProvide:{type:Boolean}},setup(t,a){const e=t.name;return t.shouldProvide&&j(_,{isCurrent:s=>e===(s.meta.layout??"default")}),()=>{var s,n;return!e||typeof e=="string"&&!(e in u)?(n=(s=a.slots).default)==null?void 0:n.call(s):l(A,{key:e,layoutProps:t.layoutProps,name:e},a.slots)}}});export{H as _};
